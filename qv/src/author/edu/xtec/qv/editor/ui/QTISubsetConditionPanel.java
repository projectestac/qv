/*
 * QTISubsetConditionPanel.java
 *
 * Created on 29 de octubre de 2002, 20:12
 */

package edu.xtec.qv.editor.ui;

import edu.xtec.jclic.shapers.utils.ShapeInfo;
import edu.xtec.qv.qti.QTISelectionResponse;
import edu.xtec.qv.qti.QTISubsetCondition;
import edu.xtec.qv.qti.util.CreatorProperties;
import edu.xtec.qv.qti.util.ObjectListElement;
import edu.xtec.qv.util.Utility;
import edu.xtec.util.Messages;

/**
 *
 * @author  Albert
 * @version
 */
public class QTISubsetConditionPanel extends javax.swing.JPanel {
    
    protected QTISubsetCondition qtiSubsetCond;
    
    /** Creates new form QTISubsetConditionPanel */
    public QTISubsetConditionPanel(QTISubsetCondition qtiSubsetCond){
        this.qtiSubsetCond=qtiSubsetCond;
        initComponents();
        initComponents2();
        if (CreatorProperties.getBackground()!=null || CreatorProperties.getComponentColor()!=null) setBackground(CreatorProperties.getBackground());
        initMessages();
    }
    
    public void setPosibleValues(java.util.Vector vPosibleValues){
        //System.out.println("setPosibleValues");
        if (vPosibleValues!=null && vPosibleValues.size()>0){
            Object oSelected=cbElement.getSelectedItem();
            cbElement.removeAllItems();
            java.util.Enumeration e=vPosibleValues.elements();
            while (e.hasMoreElements()){
                Object id=e.nextElement();
                if (id instanceof QTISelectionResponse) cbElement.addItem(((QTISelectionResponse)id).getIdent());
                else if (id instanceof ShapeInfo) cbElement.addItem(((ShapeInfo)id).getIdent());
                else System.out.println("Cast!!!!!!!!!!!!! :"+e.getClass().getName()+"<--");
            }
            if (oSelected!=null){
                cbElement.removeItem(oSelected);
                cbElement.addItem(oSelected);
                cbElement.setSelectedItem(oSelected);
            }
        }
    }
    
    public void setPosition(int iPosition){
        Utility.setOption(cbPosition,new ObjectListElement(iPosition,iPosition+""));
    }
    
    public void setElement(String sElement){
        Utility.setOption(cbElement,sElement);
    }
    
    public int getPosition(){
        int iPosition=-1;
        if (cbPosition.getSelectedItem()!=null){
            Object oSelected=cbPosition.getSelectedItem();
            if (oSelected!=null && oSelected instanceof ObjectListElement){
                ObjectListElement ole=(ObjectListElement)oSelected;
                iPosition=ole.getId();
            }
            else if (oSelected!=null){
                try{
                    iPosition=Integer.parseInt(oSelected.toString().trim());
                }
                catch (Exception e){
                }
            }
        }
        return iPosition;
    }
    
    public String getElement(){
        if (cbElement.getSelectedItem()!=null) return cbElement.getSelectedItem().toString();
        else return null;
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the FormEditor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        lbElement = new javax.swing.JLabel();
        cbElement = new javax.swing.JComboBox();
        lbPosition = new javax.swing.JLabel();
        cbPosition = new javax.swing.JComboBox();
        setLayout(new java.awt.GridBagLayout());
        java.awt.GridBagConstraints gridBagConstraints1;
        
        lbElement.setText("Element");
        
        gridBagConstraints1 = new java.awt.GridBagConstraints();
        gridBagConstraints1.insets = new java.awt.Insets(2, 5, 2, 5);
        add(lbElement, gridBagConstraints1);
        
        
        
        gridBagConstraints1 = new java.awt.GridBagConstraints();
        gridBagConstraints1.insets = new java.awt.Insets(2, 5, 2, 10);
        add(cbElement, gridBagConstraints1);
        
        
        lbPosition.setText("Posici\u00f3");
        
        gridBagConstraints1 = new java.awt.GridBagConstraints();
        gridBagConstraints1.insets = new java.awt.Insets(2, 10, 2, 5);
        add(lbPosition, gridBagConstraints1);
        
        
        
        gridBagConstraints1 = new java.awt.GridBagConstraints();
        gridBagConstraints1.insets = new java.awt.Insets(2, 5, 2, 5);
        add(cbPosition, gridBagConstraints1);
        
    }//GEN-END:initComponents
    
    private void initComponents2(){
        cbElement.setEditable(true);
        cbPosition.setEditable(true);
        initPosition();
    }
    
    protected void initPosition(){
        cbPosition.addItem(new ObjectListElement(-1,"Qualsevol"));
        for (int i=1;i<=10;i++)
            cbPosition.addItem(new ObjectListElement(i,i+""));
        
      /*cbPosition.addItemListener(new java.awt.event.ItemListener(){
        public void itemStateChanged(java.awt.event.ItemEvent e){
                int iId=((ObjectListElement)cbPosition.getSelectedItem()).getId();
        }
      });*/
    }
    
    protected void initMessages(){
        lbElement.setText(Messages.getLocalizedString("Element"));
        lbPosition.setText(Messages.getLocalizedString("Position"));
    }
    
    public void setBackground(java.awt.Color c){
        super.setBackground(c);
        java.awt.Color componentColor=CreatorProperties.getComponentColor();
        if (componentColor!=null){
            if (cbElement!=null) cbElement.setBackground(componentColor);
            if (cbPosition!=null) cbPosition.setBackground(componentColor);
            if (lbElement!=null) lbElement.setBackground(componentColor);
            if (lbPosition!=null) lbPosition.setBackground(componentColor);
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel lbElement;
    private javax.swing.JComboBox cbElement;
    private javax.swing.JLabel lbPosition;
    private javax.swing.JComboBox cbPosition;
    // End of variables declaration//GEN-END:variables
    
}