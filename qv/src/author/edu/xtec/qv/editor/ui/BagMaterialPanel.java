/*
 * BagMaterialPanel.java
 *
 * Created on 23 / gener / 2003, 19:10
 */

package edu.xtec.qv.editor.ui;

import edu.xtec.qv.qti.BagMaterial;
import edu.xtec.util.Messages;

/**
 *
 * @author  allastar
 */
public class BagMaterialPanel extends javax.swing.JPanel {
    
    BagMaterial bm;
    public static boolean lastFlow=true;
    public int size=0;
    
    /** Creates new form BagMaterialPanel */
    public BagMaterialPanel(BagMaterial bm, String title) {
        this.bm=bm;
        initComponents();
        initComponents2(title);
        initMessages();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        btDelete = new javax.swing.JButton();
        cbFlow = new javax.swing.JCheckBox();
        sldMat = new javax.swing.JSlider();
        btAdd = new javax.swing.JButton();
        spContent = new javax.swing.JScrollPane();

        setLayout(new java.awt.GridBagLayout());

        jPanel1.setLayout(new java.awt.GridBagLayout());

        jPanel1.setPreferredSize(new java.awt.Dimension(57, 140));
        btDelete.setText("-");
        btDelete.setPreferredSize(new java.awt.Dimension(41, 40));
        btDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btDeleteActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel1.add(btDelete, gridBagConstraints);

        cbFlow.setText("salts");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 15, 2);
        jPanel1.add(cbFlow, gridBagConstraints);

        sldMat.setOrientation(javax.swing.JSlider.VERTICAL);
        sldMat.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                sldMatStateChanged(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.weighty = 1.0;
        jPanel1.add(sldMat, gridBagConstraints);

        btAdd.setText("+");
        btAdd.setPreferredSize(new java.awt.Dimension(41, 40));
        btAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAddActionPerformed(evt);
            }
        });

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        jPanel1.add(btAdd, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.VERTICAL;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        add(jPanel1, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        add(spContent, gridBagConstraints);

    }//GEN-END:initComponents

    private void sldMatStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_sldMatStateChanged
        // Add your handling code here:
        javax.swing.JPanel p=bm.getMaterialPanel(sldMat.getValue()-1);
        if (p!=null) spContent.setViewportView(p);        
    }//GEN-LAST:event_sldMatStateChanged

    protected void initComponents2(String sTitle){
        setFlow(lastFlow);
        sldMat.setSnapToTicks(true);
        sldMat.setPaintLabels(true);
        sldMat.setPaintTicks(true);
        sldMat.setPaintTrack(true);
        sldMat.setEnabled(false);
        sldMat.setMinorTickSpacing(1);
        sldMat.setMajorTickSpacing(1);
        sldMat.setInverted(true);
        sldMat.setMinimum(1);
        sldMat.setMaximum(1);
        
        if (sTitle!=null && sTitle.trim().length()>0)
            setBorder(new javax.swing.border.TitledBorder(sTitle));
    }
    
    protected void initMessages(){
        btAdd.setToolTipText(Messages.getLocalizedString("AddMaterial"));
        btDelete.setToolTipText(Messages.getLocalizedString("RemoveMaterial"));
        cbFlow.setToolTipText(Messages.getLocalizedString("Flow"));
        sldMat.setToolTipText(Messages.getLocalizedString("MaterialList"));
    }
    
    public boolean isFlow(){
        return cbFlow.isSelected();
    }
    
    public void setFlow(boolean b){
        cbFlow.setSelected(b);
        lastFlow=b;
    }
    
    private void btDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btDeleteActionPerformed
        // Add your handling code here:
        int selected=sldMat.getValue();
        setSize(size-1);
        sldMat.setMaximum(size);
        bm.deleteMaterial(selected-1);
        if (size>0){
            int i=Math.max(0,selected-1);
            selectIndex(i);
        }
        else{
            spContent.setViewportView(null);
        }
    }//GEN-LAST:event_btDeleteActionPerformed

    private void btAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAddActionPerformed
        createDefaultMaterial();
    }//GEN-LAST:event_btAddActionPerformed

    public void createDefaultMaterial(){
        setSize(size+1);
        spContent.setViewportView(bm.createMaterial());
        selectIndex(size);        
    }
    
    private void listValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_listValueChanged
    }//GEN-LAST:event_listValueChanged
    
    public void selectIndex(int i){
        //list.setSelectedIndex(i);
        if (i>=0 && (i+1)>=sldMat.getMaximum()) sldMat.setValue(i+1);
        javax.swing.JPanel p=bm.getMaterialPanel(i);
        if (p!=null) spContent.setViewportView(p);        
    }
    
    public void setSize(int size){
        this.size=size;
        sldMat.setMinimum(1);
        sldMat.setMaximum(Math.max(1,size));
        if (size>1) sldMat.setEnabled(true);
        else sldMat.setEnabled(false);
        //sldMat.updateUI();
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAdd;
    private javax.swing.JCheckBox cbFlow;
    private javax.swing.JScrollPane spContent;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton btDelete;
    private javax.swing.JSlider sldMat;
    // End of variables declaration//GEN-END:variables
    
}
