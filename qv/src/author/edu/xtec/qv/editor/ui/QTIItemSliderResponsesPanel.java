/*
 * QTIItemSliderResponsesPanel.java
 *
 * Created on 31 / octubre / 2002, 13:03
 */

package edu.xtec.qv.editor.ui;

import edu.xtec.qv.qti.QTIItemSliderResponses;
import edu.xtec.qv.qti.util.CreatorProperties;
import edu.xtec.util.Messages;

/**
 *
 * @author  allastar
 */
public class QTIItemSliderResponsesPanel extends javax.swing.JPanel {
    
    public static final int HORIZONTAL=0;
    public static final int VERTICAL=1;
    
    protected QTIItemSliderResponses qtiSlidResp;
    
    /** Creates new form QTIItemSliderResponsesPanel */
    public QTIItemSliderResponsesPanel(QTIItemSliderResponses qtiSlidResp) {
        this.qtiSlidResp=qtiSlidResp;
        initComponents();
        initComponents2();
        if (CreatorProperties.getBackground()!=null || CreatorProperties.getComponentColor()!=null) setBackground(CreatorProperties.getBackground());
        initMessages();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        java.awt.GridBagConstraints gridBagConstraints;

        lbLowerBound = new javax.swing.JLabel();
        tfLowerBound = new javax.swing.JTextField();
        lbUpperBound = new javax.swing.JLabel();
        tfUpperBound = new javax.swing.JTextField();
        lbStep = new javax.swing.JLabel();
        tfStep = new javax.swing.JTextField();
        lbStartVal = new javax.swing.JLabel();
        tfStartVal = new javax.swing.JTextField();
        lbOrientation = new javax.swing.JLabel();
        cbOrientation = new javax.swing.JComboBox();
        cbStepLabel = new javax.swing.JCheckBox();

        setLayout(new java.awt.GridBagLayout());

        lbLowerBound.setText("M\u00ednim");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(5, 15, 5, 5);
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 0.4;
        add(lbLowerBound, gridBagConstraints);

        tfLowerBound.setColumns(5);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 0.6;
        add(tfLowerBound, gridBagConstraints);

        lbUpperBound.setText("M\u00e0xim");
        lbUpperBound.setToolTipText("null");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(5, 15, 5, 5);
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 0.4;
        add(lbUpperBound, gridBagConstraints);

        tfUpperBound.setColumns(5);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 0.6;
        add(tfUpperBound, gridBagConstraints);

        lbStep.setText("Increment");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(5, 15, 5, 5);
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 0.4;
        add(lbStep, gridBagConstraints);

        tfStep.setColumns(5);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 0.6;
        add(tfStep, gridBagConstraints);

        lbStartVal.setText("Valor inicial");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.insets = new java.awt.Insets(5, 15, 5, 5);
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 0.4;
        add(lbStartVal, gridBagConstraints);

        tfStartVal.setColumns(5);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 0.6;
        add(tfStartVal, gridBagConstraints);

        lbOrientation.setText("Orientaci\u00f3");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.insets = new java.awt.Insets(5, 15, 5, 5);
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 0.4;
        add(lbOrientation, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 0.6;
        add(cbOrientation, gridBagConstraints);

        cbStepLabel.setText("Mostrar etiquetes");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.REMAINDER;
        gridBagConstraints.insets = new java.awt.Insets(5, 15, 5, 5);
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 1.0;
        add(cbStepLabel, gridBagConstraints);

    }//GEN-END:initComponents
    
    private void initComponents2(){
        cbOrientation.addItem(Messages.getLocalizedString("Horizontal"));
        cbOrientation.addItem(Messages.getLocalizedString("Vertical"));
        cbOrientation.setSelectedIndex(0);
    }
    
    public void setOrientation(int iOrientation){
        cbOrientation.setSelectedIndex(iOrientation);
    }
    
    public void setStartVal(int iStartVal){
        tfStartVal.setText(iStartVal+"");
    }
    
    public void setUpperBound(int iUpperBound){
        tfUpperBound.setText(iUpperBound+"");
    }
    
    public void setLowerBound(int iLowerBound){
        tfLowerBound.setText(iLowerBound+"");
    }
    
    public void setStep(int iStep){
        tfStep.setText(iStep+"");
    }
    
    public void setStepLabel(boolean b){
        cbStepLabel.setSelected(b);
    }
    
    public int getOrientation(){
        return cbOrientation.getSelectedIndex();
    }
    
    public String getStartVal(){
        return tfStartVal.getText().trim();
    }
    
    public int getUpperBound(){
        int iUpperBound=0;
        try{
            iUpperBound=Integer.parseInt(tfUpperBound.getText().trim());
        }
        catch (Exception e){
            System.out.println("Excepció en el format del valor:"+e);
        }
        return iUpperBound;
    }
    
    public int getLowerBound(){
        int iLowerBound=0;
        try{
            iLowerBound=Integer.parseInt(tfLowerBound.getText().trim());
        }
        catch (Exception e){
            System.out.println("Excepció en el format del valor:"+e);
        }
        return iLowerBound;
    }
    
    public String getStep(){ //Si retornès un int no es podria diferenciar del cas quan no hi ha step establert.
        return tfStep.getText().trim();
    }
    
    public boolean getStepLabel(){
        return cbStepLabel.isSelected();
    }
    
    protected void initMessages(){
			lbLowerBound.setText(Messages.getLocalizedString("Minimum"));
			lbUpperBound.setText(Messages.getLocalizedString("Maximum"));
			lbStep.setText(Messages.getLocalizedString("Step"));
			lbStartVal.setText(Messages.getLocalizedString("IniValue"));
			lbOrientation.setText(Messages.getLocalizedString("Orientation"));
			cbStepLabel.setText(Messages.getLocalizedString("ShowLabels"));
		}
    
    public void setBackground(java.awt.Color c){
    	super.setBackground(c);
    	java.awt.Color componentColor=CreatorProperties.getComponentColor();
    	if (componentColor!=null){
    		if (cbOrientation!=null) cbOrientation.setBackground(componentColor);
    		if (lbStartVal!=null) lbStartVal.setBackground(componentColor);
    		if (lbStep!=null) lbStep.setBackground(componentColor);
    		if (cbStepLabel!=null) cbStepLabel.setBackground(componentColor);
    		if (lbOrientation!=null) lbOrientation.setBackground(componentColor);
    		if (lbLowerBound!=null) lbLowerBound.setBackground(componentColor);
    		if (lbUpperBound!=null) lbUpperBound.setBackground(componentColor);
    	}
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox cbOrientation;
    private javax.swing.JTextField tfStartVal;
    private javax.swing.JLabel lbStartVal;
    private javax.swing.JLabel lbStep;
    private javax.swing.JCheckBox cbStepLabel;
    private javax.swing.JTextField tfStep;
    private javax.swing.JLabel lbOrientation;
    private javax.swing.JTextField tfLowerBound;
    private javax.swing.JLabel lbLowerBound;
    private javax.swing.JTextField tfUpperBound;
    private javax.swing.JLabel lbUpperBound;
    // End of variables declaration//GEN-END:variables
    
}