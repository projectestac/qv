/*
 * QTIItemFIBResponsesPanel.java
 *
 * Created on 6 de octubre de 2002, 19:04
 */

package edu.xtec.qv.editor.ui;

import edu.xtec.qv.qti.QTIItemFIBResponses;
import edu.xtec.qv.qti.util.CreatorProperties;
import edu.xtec.qv.qti.util.ObjectListElement;
import edu.xtec.util.Messages;

/**
 *
 * @author  Albert
 * @version 
 */
public class QTIItemFIBResponsesPanel extends javax.swing.JPanel implements ExtendedRenderer{

    protected QTIItemFIBResponses qtiFIBResp;
    
    /** Creates new form QTIItemFIBResponsesPanel */
    public QTIItemFIBResponsesPanel(QTIItemFIBResponses qtiFIBResp) {
        this.qtiFIBResp=qtiFIBResp;
        initComponents ();
        initComponents2();
        if (CreatorProperties.getBackground()!=null || CreatorProperties.getComponentColor()!=null) setBackground(CreatorProperties.getBackground());
        initMessages();
    }
    
    public void setResponseTypeExpected(int iResponseTypeExpected){
    	cbResponseExpected.setSelectedIndex(iResponseTypeExpected);
    }
    
	public void setRows(int iRows){
		tfRows.setText(iRows+"");
	}
	
	public void setColumns(int iColumns){
		tfColumns.setText(iColumns+"");
	}
	
	public void setMaxChars(int iMaxChars){
		tfMaxChars.setText(iMaxChars+"");
	}
	
	public void setFillType(int iFillType){
		cbFilling.setSelectedIndex(iFillType);
	}
    
  public int getResponseTypeExpected(){
		return ((ObjectListElement)cbResponseExpected.getSelectedItem()).getId();
	}
	
	public int getRows(){
		int iRows=0;
		if (tfRows.getText()!=null && tfRows.getText().length()>0){
			try{
				iRows=Integer.parseInt(tfRows.getText());
			}
			catch(Exception e){}
		}
		return iRows;
	}
	
	public int getColumns(){
		int iColumns=0;
		if (tfColumns.getText()!=null && tfColumns.getText().length()>0){
			try{
				iColumns=Integer.parseInt(tfColumns.getText());
			}
			catch(Exception e){}
		}
		return iColumns;
	}
	
	public int getMaxChars(){
		int iMaxChars=0;
		if (tfMaxChars.getText()!=null && tfMaxChars.getText().length()>0){
			try{
				iMaxChars=Integer.parseInt(tfMaxChars.getText());
			}
			catch(Exception e){}
		}
		return iMaxChars;
	}
	
	public int getFillType(){
		return ((ObjectListElement)cbFilling.getSelectedItem()).getId();
	}
	    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the FormEditor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        java.awt.GridBagConstraints gridBagConstraints;

        lbResponseExpected = new javax.swing.JLabel();
        cbResponseExpected = new javax.swing.JComboBox();
        lbRows = new javax.swing.JLabel();
        tfRows = new javax.swing.JTextField();
        lbColumns = new javax.swing.JLabel();
        tfColumns = new javax.swing.JTextField();
        lbMaxChars = new javax.swing.JLabel();
        tfMaxChars = new javax.swing.JTextField();
        lbFilling = new javax.swing.JLabel();
        cbFilling = new javax.swing.JComboBox();

        setLayout(new java.awt.GridBagLayout());

        lbResponseExpected.setText("Resposta esperada");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 0.4;
        gridBagConstraints.insets = new java.awt.Insets(5, 15, 5, 5);
        add(lbResponseExpected, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 0.6;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(cbResponseExpected, gridBagConstraints);

        lbRows.setText("Files");
        lbRows.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 0.4;
        gridBagConstraints.insets = new java.awt.Insets(5, 15, 5, 5);
        add(lbRows, gridBagConstraints);

        tfRows.setColumns(3);
        tfRows.setPreferredSize(new java.awt.Dimension(33, 20));
        tfRows.setMinimumSize(new java.awt.Dimension(40, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 0.6;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(tfRows, gridBagConstraints);

        lbColumns.setText("Columnes");
        lbColumns.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 0.4;
        gridBagConstraints.insets = new java.awt.Insets(5, 15, 5, 5);
        add(lbColumns, gridBagConstraints);

        tfColumns.setColumns(3);
        tfColumns.setPreferredSize(new java.awt.Dimension(33, 20));
        tfColumns.setMinimumSize(new java.awt.Dimension(40, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 3;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 0.6;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(tfColumns, gridBagConstraints);

        lbMaxChars.setText("M\u00e0xim car\u00e0cters");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 0.4;
        gridBagConstraints.insets = new java.awt.Insets(5, 15, 5, 5);
        add(lbMaxChars, gridBagConstraints);

        tfMaxChars.setColumns(3);
        tfMaxChars.setPreferredSize(new java.awt.Dimension(33, 20));
        tfMaxChars.setMinimumSize(new java.awt.Dimension(40, 20));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 4;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 0.6;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(tfMaxChars, gridBagConstraints);

        lbFilling.setText("Ompliment d'espais");
        lbFilling.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 0.4;
        gridBagConstraints.insets = new java.awt.Insets(5, 15, 5, 5);
        add(lbFilling, gridBagConstraints);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 5;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
        gridBagConstraints.weightx = 0.6;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        add(cbFilling, gridBagConstraints);

    }//GEN-END:initComponents

    private void initComponents2(){
      cbResponseExpected.addItem(new ObjectListElement(QTIItemFIBResponses.STRING,"Text"));
      cbResponseExpected.addItem(new ObjectListElement(QTIItemFIBResponses.INTEGER,"Enter"));
      cbResponseExpected.addItem(new ObjectListElement(QTIItemFIBResponses.DECIMAL,"Real"));
      cbResponseExpected.addItem(new ObjectListElement(QTIItemFIBResponses.SCIENTIFIC,"Científic"));
      cbResponseExpected.addItem(new ObjectListElement(QTIItemFIBResponses.BOOLEAN,"Booleà"));
        
      cbFilling.addItem(new ObjectListElement(QTIItemFIBResponses.BOX,"Res"));
      cbFilling.addItem(new ObjectListElement(QTIItemFIBResponses.DASHLINE,"-"));
      cbFilling.addItem(new ObjectListElement(QTIItemFIBResponses.ASTERISK,"*"));
      cbFilling.addItem(new ObjectListElement(QTIItemFIBResponses.UNDERLINE,"_"));
    }
    
    protected void initMessages(){
			lbResponseExpected.setText(Messages.getLocalizedString("ExpectedResponse"));
			lbRows.setText(Messages.getLocalizedString("Rows"));
			lbColumns.setText(Messages.getLocalizedString("Columns"));
			lbMaxChars.setText(Messages.getLocalizedString("MaxChars"));
			lbFilling.setText(Messages.getLocalizedString("WhiteFilling"));
		}
    
    public void setBackground(java.awt.Color c){
    	super.setBackground(c);
    	java.awt.Color componentColor=CreatorProperties.getComponentColor();
    	if (componentColor!=null){
    		if (lbResponseExpected!=null) lbResponseExpected.setBackground(componentColor);
    		if (cbResponseExpected!=null) cbResponseExpected.setBackground(componentColor);
    		if (lbRows!=null) lbRows.setBackground(componentColor);
    		if (lbColumns!=null) lbColumns.setBackground(componentColor);
    		if (lbMaxChars!=null) lbMaxChars.setBackground(componentColor);
    		if (lbFilling!=null) lbFilling.setBackground(componentColor);
    		if (cbFilling!=null) cbFilling.setBackground(componentColor);
    	}
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField tfRows;
    private javax.swing.JLabel lbColumns;
    private javax.swing.JComboBox cbFilling;
    private javax.swing.JLabel lbResponseExpected;
    private javax.swing.JTextField tfMaxChars;
    private javax.swing.JLabel lbMaxChars;
    private javax.swing.JTextField tfColumns;
    private javax.swing.JComboBox cbResponseExpected;
    private javax.swing.JLabel lbRows;
    private javax.swing.JLabel lbFilling;
    // End of variables declaration//GEN-END:variables

}